openapi: 3.0.0
info:
  title: "Ceste Flask REST API"
  description: "API acerca de persona y notas"
  version: "1.0.0"

servers:
  - url: "/api"

components:
  schemas:
    Person:
      type: "object"
      required:
        - lname
      properties:
        fname:
          type: "string"
        lname:
          type: "string"
  parameters:
    lname:
      name: "lname"
      description: "Apellido persona get"
      in: path
      required: True
      schema:
        type: "string"
    note_id:
      name: "note_id"
      description: "ID de la nota"
      in: path
      required: true
      schema:
        type: "integer"


paths:
  /people:
    get:
      operationId: "people.read_all"
      tags:
        - "People"
      summary: "Obtener lista personas"
      responses:
        "200":
          description: "Lectura exitosa lista personas"
    post:
      operationId: "people.create"
      tags:
        - People
      summary: "Crear una persona"
      requestBody:
          description: "Persona a crear"
          required: True
          content:
            application/json:
              schema:
                x-body-name: "person"
                $ref: "#/components/schemas/Person"
      responses:
        "201":
          description: "Persona creada existosamente"
  /people/{lname}:
    get:
      operationId: "people.read_one"
      tags:
        - People
      summary: "Obtener persona por nombre"
      parameters:
        - $ref: "#/components/parameters/lname"
      responses:
        "200":
          description: "Lectura exitosa de persona"
    put:
      tags:
        - People
      operationId: "people.update"
      summary: "Actualiza datos persona"
      parameters:
        - $ref: "#/components/parameters/lname"
      responses:
        "200":
          description: "Actualizaci贸n exitosa persona"
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: "person"
              $ref: "#/components/schemas/Person"
    delete:
      tags:
        - People
      operationId: "people.delete"
      summary: "Eliminar una persona"
      parameters:
        - $ref: "#/components/parameters/lname"
      responses:
        "204":
          description: "Eliminaci贸n exitosa persona"
  /notes:
    post:
      operationId: "notes.create"
      tags:
        - Notes
      summary: "Crear nota asociada a persona"
      requestBody:
          description: "Note to create"
          required: True
          content:
            application/json:
              schema:
                x-body-name: "note"
                type: "object"
                properties:
                  person_id:
                    type: "integer"
                  content:
                    type: "string"
      responses:
        "201":
          description: "Creaci贸n exitosa de nota"
  /notes/{note_id}:
    get:
      operationId: "notes.read_one"
      tags:
        - Notes
      summary: "Read one note"
      parameters:
        - $ref: "#/components/parameters/note_id"
      responses:
        "200":
          description: "Lectura exitosa al leer nota"
    put:
      tags:
        - Notes
      operationId: "notes.update"
      summary: "Update a note"
      parameters:
        - $ref: "#/components/parameters/note_id"
      responses:
        "200":
          description: "Update exitoso de nota"
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: "note"
              type: "object"
              properties:
                content:
                  type: "string"
    delete:
      tags:
        - Notes
      operationId: "notes.delete"
      summary: "Delete a note"
      parameters:
        - $ref: "#/components/parameters/note_id"
      responses:
        "204":
          description: "Eliminaci贸n exitosa de nota"
